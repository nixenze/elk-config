---
- name: Install Kibana version {{ kibana_version }}.
  become: yes
  yum:
    name: kibana-{{ kibana_version }}
    state: present
  register: kibana_install
  until: kibana_install is succeeded
  tags: installation

- include: config.yml
  tags: configuration

- name: open port {{ kibana_port }} on firewall
  firewalld:
    port: "{{ kibana_port }}/tcp"
    permanent: yes
    state: enabled
    immediate: true
  tags: configuration

- name: Ensure Kibana is started and enabled at boot.
  become: yes
  service:
    name: kibana
    state: started
    enabled: true
  tags: execution

- name: Upload Kibana Dashboard
  #workaround
  block:
    - name: copy dashboard file to host
      become: yes
      copy:
        src: templates/Kibana_dashboard_export_ALL.ndjson.j2
        dest: "{{ kibana_dashboard_location }}"
        owner: root
        group: kibana
        mode: "660"

    - name: copy upload command
      become: yes
      template:
        src: upload_dashboard.j2
        dest: /etc/kibana/upload_dashboard
        owner: root
        group: kibana
        mode: "755"
  tags: configuration

- name: Waits for kibana port {{ kibana_port }} to be ready for uploading dashboard
  block:
    - name: Check if Kibana is listening on the port
      wait_for:
        host: "{{ ansible_hostname }}"
        port: "{{ kibana_port }}"
        delay: 5
        state: started

    - name: Check if Kibana is ready for upload
      uri:
        url: http://{{ ansible_hostname }}:{{ kibana_port }}/
      register: response
      until: "'kbn_name' in response and response.status == 200"
      retries: 20
      delay: 3
  tags: configuration
  
- name: upload dashboard
  become: yes
  shell: >
    set -o pipefail;unset http_proxy;unset https_proxy;
    sh /etc/kibana/upload_dashboard
  changed_when: false
  tags: configuration
